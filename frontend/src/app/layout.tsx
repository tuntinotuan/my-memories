import type { Metadata } from "next";
import { Roboto_Mono, Coming_Soon, Ubuntu } from "next/font/google";
import "./globals.css";
import "../styles/_reset-css.css";
import "../styles/typing-theme.css";
import { LayoutProvider } from "@/contexts/layoutStates";
import { CreateBoardProvider } from "@/contexts/createBoardStates";
import { NotifyProvider } from "@/contexts/notifyStates";
import { TypingThemeProvider } from "@/contexts/typingThemeStates";

const robotoMono = Roboto_Mono({
  subsets: ["latin"],
  weight: ["400", "500", "700"], // adjust based on what you need
  variable: "--font-roboto-mono", // optional, for use in CSS
  display: "swap", // optional for better UX
});
const comingSoon = Coming_Soon({
  subsets: ["latin"],
  weight: ["400"], // adjust based on what you need
  variable: "--font-roboto-mono", // optional, for use in CSS
  display: "swap", // optional for better UX
});

const ubuntu = Ubuntu({
  subsets: ["latin"],
  weight: ["400", "700"], // choose weights you need
  variable: "--font-ubuntu",
});

export const metadata: Metadata = {
  title: "My Memories",
  description: "Generated by create next app",
  icons: {
    icon: "/icons/memories-metadata-icon.png", // default favicon
    shortcut: "/icons/memories-metadata-icon.png", // browser shortcut icon
    apple: "/apple-touch-icon.png", // for iOS devices
  },
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en" className={ubuntu.variable}>
      <head>
        <link
          href="https://fonts.googleapis.com/css2?family=Ubuntu:wght@400;700&display=swap"
          rel="stylesheet"
        />
      </head>
      <body className={`fixed inset-0 text-primaryBlack`}>
        <CreateBoardProvider>
          <NotifyProvider>
            <TypingThemeProvider>
              <LayoutProvider>
                <div id="myportal" />
                {children}
              </LayoutProvider>
            </TypingThemeProvider>
          </NotifyProvider>
        </CreateBoardProvider>
      </body>
    </html>
  );
}
